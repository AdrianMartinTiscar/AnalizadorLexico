/* Generated By:JavaCC: Do not edit this line. AnalizadorSintacticoTiny1.java */
package descendente;

public class AnalizadorSintacticoTiny1 implements AnalizadorSintacticoTiny1Constants {

  final public void Programa() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case proc:
    case var:
    case type:
      Decs();
      jj_consume_token(Separacion);
      Instrs();
      break;
    case ptrue:
    case pfalse:
    case not:
    case pnull:
    case pif:
    case pwhile:
    case call:
    case pnew:
    case delete:
    case read:
    case write:
    case nl:
    case id:
    case Nentero:
    case Nreal:
    case literalCad:
    case 45:
    case 49:
    case 54:
    case 58:
      Instrs();
      break;
    default:
      jj_la1[0] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void Decs() throws ParseException {
    Dec();
    restoDec();
  }

  final public void restoDec() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case PtoComa:
      jj_consume_token(PtoComa);
      Decs();
      break;
    default:
      jj_la1[1] = jj_gen;

    }
  }

  final public void Dec() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case var:
      jj_consume_token(var);
      tipo();
      jj_consume_token(id);
      break;
    case type:
      jj_consume_token(type);
      tipo();
      jj_consume_token(id);
      break;
    case proc:
      jj_consume_token(proc);
      jj_consume_token(id);
      paramForm();
      bloque();
      break;
    default:
      jj_la1[2] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void paramForm() throws ParseException {
    jj_consume_token(45);
    paramFormD();
    LparamForm();
    jj_consume_token(46);
  }

  final public void paramFormD() throws ParseException {
    tipo();
    restParamFormD();
  }

  final public void restParamFormD() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 47:
      jj_consume_token(47);
      jj_consume_token(id);
      break;
    case id:
      jj_consume_token(id);
      break;
    default:
      jj_la1[3] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void LparamForm() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 48:
      jj_consume_token(48);
      paramFormD();
      LparamForm();
      break;
    default:
      jj_la1[4] = jj_gen;

    }
  }

  final public void bloque() throws ParseException {
    jj_consume_token(49);
    Programa();
    jj_consume_token(50);
  }

  final public void tipoBas() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case pint:
      jj_consume_token(pint);
      break;
    case bool:
      jj_consume_token(bool);
      break;
    case real:
      jj_consume_token(real);
      break;
    case string:
      jj_consume_token(string);
      break;
    default:
      jj_la1[5] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void tipo() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case pint:
    case real:
    case bool:
    case string:
      tipoBas();
      break;
    case array:
      tarray();
      break;
    case record:
      trecord();
      break;
    case pointer:
      tpointer();
      break;
    case id:
      jj_consume_token(id);
      break;
    default:
      jj_la1[6] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void tarray() throws ParseException {
    jj_consume_token(array);
    jj_consume_token(51);
    jj_consume_token(Nentero);
    jj_consume_token(52);
    jj_consume_token(of);
    tipo();
  }

  final public void trecord() throws ParseException {
    jj_consume_token(record);
    jj_consume_token(49);
    campo();
    campos();
    jj_consume_token(50);
  }

  final public void campos() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case PtoComa:
      jj_consume_token(PtoComa);
      campo();
      campos();
      break;
    default:
      jj_la1[7] = jj_gen;

    }
  }

  final public void campo() throws ParseException {
    tipo();
    jj_consume_token(id);
  }

  final public void tpointer() throws ParseException {
    jj_consume_token(pointer);
    tipo();
  }

  final public void Instrs() throws ParseException {
    Instr();
    restoIns();
  }

  final public void restoIns() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case PtoComa:
      jj_consume_token(PtoComa);
      Instrs();
      break;
    default:
      jj_la1[8] = jj_gen;

    }
  }

  final public void Instr() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case ptrue:
    case pfalse:
    case not:
    case pnull:
    case id:
    case Nentero:
    case Nreal:
    case literalCad:
    case 45:
    case 54:
    case 58:
      expr();
      jj_consume_token(53);
      expr();
      break;
    case pif:
      jj_consume_token(pif);
      expr();
      jj_consume_token(then);
      Instrs();
      restoIf();
      break;
    case pwhile:
      jj_consume_token(pwhile);
      expr();
      jj_consume_token(pdo);
      Instrs();
      jj_consume_token(endwhile);
      break;
    case read:
      jj_consume_token(read);
      expr();
      break;
    case write:
      jj_consume_token(write);
      expr();
      break;
    case nl:
      jj_consume_token(nl);
      break;
    case pnew:
      jj_consume_token(pnew);
      expr();
      break;
    case delete:
      jj_consume_token(delete);
      expr();
      break;
    case call:
      jj_consume_token(call);
      jj_consume_token(id);
      parReales();
      break;
    case 49:
      bloque();
      break;
    default:
      jj_la1[9] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void restoIf() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case endif:
      jj_consume_token(endif);
      break;
    case pelse:
      jj_consume_token(pelse);
      Instrs();
      jj_consume_token(endif);
      break;
    default:
      jj_la1[10] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void parReales() throws ParseException {
    jj_consume_token(45);
    ExpresionesOp();
    jj_consume_token(46);
  }

  final public void ExpresionesOp() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case ptrue:
    case pfalse:
    case not:
    case pnull:
    case id:
    case Nentero:
    case Nreal:
    case literalCad:
    case 45:
    case 54:
    case 58:
      expr();
      LExpresiones();
      break;
    default:
      jj_la1[11] = jj_gen;

    }
  }

  final public void LExpresiones() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 48:
      jj_consume_token(48);
      expr();
      LExpresiones();
      break;
    default:
      jj_la1[12] = jj_gen;

    }
  }

  final public void expr() throws ParseException {
    E0();
  }

  final public void E0() throws ParseException {
    E1();
    restoE0();
  }

  final public void restoE0() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 54:
      jj_consume_token(54);
      E1();
      break;
    case 55:
      jj_consume_token(55);
      E0();
      break;
    default:
      jj_la1[13] = jj_gen;

    }
  }

  final public void E1() throws ParseException {
    E2();
    Rest2E1();
  }

  final public void Rest2E1() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case and:
    case or:
      op1AI();
      E2();
      Rest2E1();
      break;
    default:
      jj_la1[14] = jj_gen;

    }
  }

  final public void E2() throws ParseException {
    E3();
    Rest2E2();
  }

  final public void Rest2E2() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 53:
    case 59:
    case 60:
    case 61:
      op2AI();
      E3();
      Rest2E2();
      break;
    default:
      jj_la1[15] = jj_gen;

    }
  }

  final public void E3() throws ParseException {
    E4();
    restE3();
  }

  final public void restE3() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 58:
    case 62:
    case 63:
      op3NA();
      E4();
      restE3();
      break;
    default:
      jj_la1[16] = jj_gen;

    }
  }

  final public void E4() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 54:
      jj_consume_token(54);
      E5();
      break;
    case not:
      jj_consume_token(not);
      E4();
      break;
    case ptrue:
    case pfalse:
    case pnull:
    case id:
    case Nentero:
    case Nreal:
    case literalCad:
    case 45:
    case 58:
      E5();
      break;
    default:
      jj_la1[17] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E5() throws ParseException {
    E6();
    Resto2E5();
  }

  final public void Resto2E5() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 51:
    case 56:
    case 57:
      RestoE5();
      Resto2E5();
      break;
    default:
      jj_la1[18] = jj_gen;

    }
  }

  final public void RestoE5() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 51:
      jj_consume_token(51);
      expr();
      jj_consume_token(52);
      break;
    case 56:
      jj_consume_token(56);
      jj_consume_token(id);
      break;
    case 57:
      jj_consume_token(57);
      jj_consume_token(id);
      break;
    default:
      jj_la1[19] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E6() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 58:
      jj_consume_token(58);
      E6();
      break;
    case ptrue:
    case pfalse:
    case pnull:
    case id:
    case Nentero:
    case Nreal:
    case literalCad:
    case 45:
      E7();
      break;
    default:
      jj_la1[20] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void E7() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 45:
      jj_consume_token(45);
      E0();
      jj_consume_token(46);
      break;
    case Nentero:
      jj_consume_token(Nentero);
      break;
    case Nreal:
      jj_consume_token(Nreal);
      break;
    case ptrue:
      jj_consume_token(ptrue);
      break;
    case pfalse:
      jj_consume_token(pfalse);
      break;
    case literalCad:
      jj_consume_token(literalCad);
      break;
    case id:
      jj_consume_token(id);
      break;
    case pnull:
      jj_consume_token(pnull);
      break;
    default:
      jj_la1[21] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void op1AI() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case and:
      jj_consume_token(and);
      break;
    case or:
      jj_consume_token(or);
      break;
    default:
      jj_la1[22] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void op2AI() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 59:
      jj_consume_token(59);
      resto();
      break;
    case 60:
      jj_consume_token(60);
      resto();
      break;
    case 53:
      jj_consume_token(53);
      jj_consume_token(53);
      break;
    case 61:
      jj_consume_token(61);
      jj_consume_token(53);
      break;
    default:
      jj_la1[23] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  final public void resto() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 53:
      jj_consume_token(53);
      break;
    default:
      jj_la1[24] = jj_gen;

    }
  }

  final public void op3NA() throws ParseException {
    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {
    case 58:
      jj_consume_token(58);
      break;
    case 62:
      jj_consume_token(62);
      break;
    case 63:
      jj_consume_token(63);
      break;
    default:
      jj_la1[25] = jj_gen;
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  public AnalizadorSintacticoTiny1TokenManager token_source;
  SimpleCharStream jj_input_stream;
  public Token token, jj_nt;
  private int jj_ntk;
  private int jj_gen;
  final private int[] jj_la1 = new int[26];
  static private int[] jj_la1_0;
  static private int[] jj_la1_1;
  static {
      jj_la1_0();
      jj_la1_1();
   }
   private static void jj_la1_0() {
      jj_la1_0 = new int[] {0x91e3000,0x0,0x80000,0x0,0x0,0x4e00,0xb0004e00,0x0,0x0,0x9163000,0xc00000,0x63000,0x0,0x0,0x18000,0x0,0x0,0x63000,0x0,0x0,0x43000,0x43000,0x18000,0x0,0x0,0x0,};
   }
   private static void jj_la1_1() {
      jj_la1_1 = new int[] {0x4423e7f,0x100,0x60,0x8200,0x10000,0x0,0x200,0x100,0x100,0x4423e1f,0x0,0x4403e00,0x10000,0xc00000,0x0,0x38200000,0xc4000000,0x4403e00,0x3080000,0x3080000,0x4003e00,0x3e00,0x0,0x38200000,0x200000,0xc4000000,};
   }

  public AnalizadorSintacticoTiny1(java.io.InputStream stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new AnalizadorSintacticoTiny1TokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 26; i++) jj_la1[i] = -1;
  }

  public void ReInit(java.io.InputStream stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 26; i++) jj_la1[i] = -1;
  }

  public AnalizadorSintacticoTiny1(java.io.Reader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new AnalizadorSintacticoTiny1TokenManager(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 26; i++) jj_la1[i] = -1;
  }

  public void ReInit(java.io.Reader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 26; i++) jj_la1[i] = -1;
  }

  public AnalizadorSintacticoTiny1(AnalizadorSintacticoTiny1TokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 26; i++) jj_la1[i] = -1;
  }

  public void ReInit(AnalizadorSintacticoTiny1TokenManager tm) {
    token_source = tm;
    token = new Token();
    jj_ntk = -1;
    jj_gen = 0;
    for (int i = 0; i < 26; i++) jj_la1[i] = -1;
  }

  final private Token jj_consume_token(int kind) throws ParseException {
    Token oldToken;
    if ((oldToken = token).next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    if (token.kind == kind) {
      jj_gen++;
      return token;
    }
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  final public Token getNextToken() {
    if (token.next != null) token = token.next;
    else token = token.next = token_source.getNextToken();
    jj_ntk = -1;
    jj_gen++;
    return token;
  }

  final public Token getToken(int index) {
    Token t = token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  final private int jj_ntk() {
    if ((jj_nt=token.next) == null)
      return (jj_ntk = (token.next=token_source.getNextToken()).kind);
    else
      return (jj_ntk = jj_nt.kind);
  }

  private java.util.Vector jj_expentries = new java.util.Vector();
  private int[] jj_expentry;
  private int jj_kind = -1;

  public ParseException generateParseException() {
    jj_expentries.removeAllElements();
    boolean[] la1tokens = new boolean[64];
    for (int i = 0; i < 64; i++) {
      la1tokens[i] = false;
    }
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 26; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 64; i++) {
      if (la1tokens[i]) {
        jj_expentry = new int[1];
        jj_expentry[0] = i;
        jj_expentries.addElement(jj_expentry);
      }
    }
    int[][] exptokseq = new int[jj_expentries.size()][];
    for (int i = 0; i < jj_expentries.size(); i++) {
      exptokseq[i] = (int[])jj_expentries.elementAt(i);
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  final public void enable_tracing() {
  }

  final public void disable_tracing() {
  }

                                        }
